// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoApi.Data;

namespace ProjetoApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211222234139_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("ProjetoApi.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("ProjetoApi.Models.Partido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .HasColumnType("longtext");

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<string>("Rua")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Partidos");
                });

            modelBuilder.Entity("ProjetoApi.Models.Politico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cargo")
                        .HasColumnType("longtext");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Foto")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PartidoId")
                        .HasColumnType("int");

                    b.Property<int?>("RepresentanteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("PartidoId");

                    b.HasIndex("RepresentanteId");

                    b.ToTable("Politicos");
                });

            modelBuilder.Entity("ProjetoApi.Models.Processo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int?>("PoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoliticoId");

                    b.ToTable("Processos");
                });

            modelBuilder.Entity("ProjetoApi.Models.ProjetoLei", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AutorId")
                        .HasColumnType("int");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Ementa")
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<int>("StatusProjetoLei")
                        .HasColumnType("int");

                    b.Property<int>("TiposProjetosLei")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("ProjetosLeis");
                });

            modelBuilder.Entity("ProjetoApi.Models.Representante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Representantes");
                });

            modelBuilder.Entity("ProjetoApi.Models.Telefone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("Deletado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Numero")
                        .HasColumnType("longtext");

                    b.Property<int?>("PoliticoId")
                        .HasColumnType("int");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PoliticoId");

                    b.ToTable("Telefones");
                });

            modelBuilder.Entity("ProjetoApi.Models.Politico", b =>
                {
                    b.HasOne("ProjetoApi.Models.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.HasOne("ProjetoApi.Models.Partido", "Partido")
                        .WithMany("Politicos")
                        .HasForeignKey("PartidoId");

                    b.HasOne("ProjetoApi.Models.Representante", "Representante")
                        .WithMany()
                        .HasForeignKey("RepresentanteId");

                    b.Navigation("Endereco");

                    b.Navigation("Partido");

                    b.Navigation("Representante");
                });

            modelBuilder.Entity("ProjetoApi.Models.Processo", b =>
                {
                    b.HasOne("ProjetoApi.Models.Politico", null)
                        .WithMany("Processos")
                        .HasForeignKey("PoliticoId");
                });

            modelBuilder.Entity("ProjetoApi.Models.ProjetoLei", b =>
                {
                    b.HasOne("ProjetoApi.Models.Politico", "Autor")
                        .WithMany("ProjetosLei")
                        .HasForeignKey("AutorId");

                    b.Navigation("Autor");
                });

            modelBuilder.Entity("ProjetoApi.Models.Telefone", b =>
                {
                    b.HasOne("ProjetoApi.Models.Politico", null)
                        .WithMany("Telefone")
                        .HasForeignKey("PoliticoId");
                });

            modelBuilder.Entity("ProjetoApi.Models.Partido", b =>
                {
                    b.Navigation("Politicos");
                });

            modelBuilder.Entity("ProjetoApi.Models.Politico", b =>
                {
                    b.Navigation("Processos");

                    b.Navigation("ProjetosLei");

                    b.Navigation("Telefone");
                });
#pragma warning restore 612, 618
        }
    }
}
